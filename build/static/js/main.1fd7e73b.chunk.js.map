{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","API.ts","AppF.tsx","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","checkTodo","status","className","name","description","onClick","_id","AddTodo","saveTodo","useState","formData","setFormData","handleForm","e","currentTarget","id","value","onSubmit","htmlFor","onChange","type","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","console","log","addTodo","post","Error","todoUpdate","put","updatedTodo","delete","deletedTodo","App","setTodos","useEffect","fetchTodos","then","data","catch","error","handleUpdateTodo","err","handleDeleteTodo","preventDefault","map","TodoItem","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fd7e73b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype Props = TodoProps & {\r\n  updateTodo: (todo: ITodo) => void;\r\n  deleteTodo: (_id: string) => void;\r\n};\r\n\r\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\r\n  const checkTodo: string = todo.status ? `line-through` : \"\";\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"Card--text\">\r\n        <h1 className={checkTodo}>{todo.name}</h1>\r\n        <span className={checkTodo}>{todo.description}</span>\r\n      </div>\r\n      <div className=\"Card--button\">\r\n        <button\r\n          onClick={() => updateTodo(todo)}\r\n          className={todo.status ? `hide-button` : `Card--button__done`}\r\n        >\r\n          Complete\r\n        </button>\r\n        <button\r\n          onClick={() => deleteTodo(todo._id)}\r\n          className=\"Card--button__delete\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react'\r\n\r\ntype Props = { \r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \r\n}\r\n\r\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\r\n  const [formData, setFormData] = useState<ITodo | {}>()\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\r\n      <div>\r\n        <div>\r\n          <label htmlFor='name'>Name</label>\r\n          <input onChange={handleForm} type='text' id='name' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='description'>Description</label>\r\n          <input onChange={handleForm} type='text' id='description' />\r\n        </div>\r\n      </div>\r\n      <button disabled={formData === undefined ? true: false} >Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTodo","import axios, { AxiosResponse } from \"axios\";\r\n\r\nconst baseUrl: string = \"http://localhost:4000\";\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + \"/todos\"\r\n    );\r\n    return todos;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addTodo = async (\r\n  formData: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todo: Omit<ITodo, \"_id\"> = {\r\n      name: formData.name,\r\n      description: formData.description,\r\n      status: false,\r\n    };\r\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\r\n      baseUrl + \"/add-todo\",\r\n      todo\r\n    );\r\n    return saveTodo;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const updateTodo = async (\r\n  todo: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todoUpdate: Pick<ITodo, \"status\"> = {\r\n      status: true,\r\n    };\r\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\r\n      `${baseUrl}/edit-todo/${todo._id}`,\r\n      todoUpdate\r\n    );\r\n    return updatedTodo;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/delete-todo/${_id}`\r\n    );\r\n    return deletedTodo;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\nimport AddTodo from \"./components/AddTodo\";\nimport { getTodos, addTodo, updateTodo, deleteTodo } from \"./API\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = (): void => {\n    getTodos()\n      .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n      .catch((error) => console.log(error));\n  };\n\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n    e.preventDefault();\n    addTodo(formData)\n      .then(({ status, data }) => {\n        if (status !== 201) {\n          throw new Error(\"Error! Todo not saved\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((error) => console.log(error));\n  };\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not updated\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not updated\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <main className=\"App\">\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./AppF\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}